<style type="text/css">
    body {
        margin: 0px;
        padding: 0px;
    }

    #divAuthorizeNetPopupScreen {
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 1;
        background-color: #808080;
        opacity: 0.5;
        -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=50)';
        filter: alpha(opacity=50);
    }

    #divAuthorizeNetPopup {
        position: fixed;
        left: 50%;
        top: 50%;
        /*margin-left: -200px;*/
        /*margin-top: -200px;*/
        z-index: 2;
        overflow: visible;
        visibility: initial;
        margin-top: -400px;
        margin-left: -400px;
        transform: translate(0, 0) !important;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupOuter {
        background-color: #222d32;
        background-color: #ffffff;
        border-width: 1px;
        border-style: solid;
        border-color: #a0a0a0 #909090 #909090 #a0a0a0;
        padding: 4px;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupTop {
        height: 23px;
        position: absolute;
        top: 0;
        width: 100%;
        left: 0;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupClose {
        position: absolute;
        right: 18px;
        top: 0;
        color: #ffffff;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupClose .fa-times {
        cursor: pointer;
        color: black;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupClose a {
        background-image: url('content/closeButton1.png');
        background-repeat: no-repeat;
        height: 16px;
        width: 16px;
        display: inline-block;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupClose a:hover {
        background-image: url('content/closeButton1h.png');
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupClose a:active {
        background-image: url('content/closeButton1a.png');
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupInner {
        background-color: #ffffff;
        border-width: 0;
        border-style: solid;
        border-color: #cfcfcf #ebebeb #ebebeb #cfcfcf;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupBottom {
        height: 30px;
    }

    .AuthorizeNetPopupGrayFrameTheme .AuthorizeNetPopupLogo {
        position: absolute;
        right: 9px;
        bottom: 4px;
        width: 200px;
        height: 25px;
        background-image: url('content/powered_simple.png');
    }

    .AuthorizeNetPopupSimpleTheme .AuthorizeNetPopupOuter {
        border: 1px solid #585858;
        background-color: #ffffff;
    }

    #iframeAuthorizeNet{
        width: 840px !important;
    }
</style>

<form method="post" action="https://accept.authorize.net/payment/payment" id="formAuthorizeNetPopup"
      name="formAuthorizeNetPopup" target="iframeAuthorizeNet" style="display:none;">
    <input type="hidden" id="popupToken" name="token" value=""/>
</form>
{#
<input type="text" id="inputtoken" value="{{ token }}"/>

<br/>

<div>
    Trigger Accept Transaction
    <button id="btnOpenAuthorizeNetPopup" onclick="AuthorizeNetPopup.openPopup()">Open AuthorizeNetPopup</button>
</div>
#}
<div id="divAuthorizeNetPopup" style="display:none;" class="AuthorizeNetPopupGrayFrameTheme">
    <div class="AuthorizeNetPopupOuter">
        <div class="AuthorizeNetPopupTop">
            <div class="AuthorizeNetPopupClose">
                <i class="fa fa-times" aria-hidden="true" onclick="AuthorizeNetPopup.closePopup();" title="Close"></i>
            </div>
        </div>
        <div class="AuthorizeNetPopupInner">
            <iframe name="iframeAuthorizeNet" id="iframeAuthorizeNet" src="{{ url('auth_inner_popup') }}" frameborder="0"
                    scrolling="no"></iframe>
        </div>
        <div class="AuthorizeNetPopupBottom">
            <div class="AuthorizeNetPopupLogo" title="Powered by Authorize.Net"></div>
        </div>
        <div id="divAuthorizeNetPopupScreen" style="display:none;"></div>
    </div>
</div>

<script type="text/javascript">
    (function () {
        if (!window.AuthorizeNetPopup) window.AuthorizeNetPopup = {};
        if (!AuthorizeNetPopup.options) AuthorizeNetPopup.options = {
            onPopupClosed: null
        };

        AuthorizeNetPopup.closePopup = function () {
            document.getElementById("divAuthorizeNetPopupScreen").style.display = "none";
            document.getElementById("divAuthorizeNetPopup").style.display = "none";
            document.getElementById("iframeAuthorizeNet").src = "{{ url('auth_inner_popup') }}";
            document.getElementById("btnOpenAuthorizeNetPopup").disabled = false;
            if (AuthorizeNetPopup.options.onPopupClosed) AuthorizeNetPopup.options.onPopupClosed();
        };


        AuthorizeNetPopup.openPopup = function (orderId) {
            var popup = document.getElementById("divAuthorizeNetPopup");
            var popupScreen = document.getElementById("divAuthorizeNetPopupScreen");
            var ifrm = document.getElementById("iframeAuthorizeNet");
            var form = document.forms["formAuthorizeNetPopup"];
            $("#popupToken").val($("#inputtoken"+orderId).val());
            form.action = "https://accept.authorize.net/payment/payment";
            ifrm.style.width = "884px";
            ifrm.style.height = "650px";

            form.submit();

            popup.style.display = "";
            popupScreen.style.display = "";
            centerPopup();
        };

        AuthorizeNetPopup.onReceiveCommunication = function (querystr) {
            var params = parseQueryString(querystr);
            console.log(params);
            switch (params["action"]) {
                case "successfulSave":
                    AuthorizeNetPopup.closePopup();
                    $('#payment_form_auth + div').html('');
                    $('.popup-wrap h2').text('{{ 'Successful payment' | trans }}');
                    $('.popup-wrap').toggleClass('open');
                    setTimeout(function () {
                        $('.popup-wrap').removeClass('open');
                    }, 2000);
                    break;
                case "cancel":
                    AuthorizeNetPopup.closePopup();
                    break;
                case "transactResponse":
                    var response = params["response"];
                    // document.getElementById("token").value = response;
                    AuthorizeNetPopup.closePopup();
                    $('#payment_form_auth + div').html('');
                    $('.popup-wrap h2').text('{{ 'Successful payment' | trans }}');
                    $('.popup-wrap').toggleClass('open');
                    setTimeout(function () {
                        $('.popup-wrap').removeClass('open');
                    }, 2000);
                    break;
                case "resizeWindow":
                    var w = parseInt(params["width"]);
                    var h = parseInt(params["height"]);
                    var ifrm = document.getElementById("iframeAuthorizeNet");
                    ifrm.style.width = w.toString() + "px";
                    ifrm.style.height = h.toString() + "px";
                    centerPopup();
                    break;
            }
        };


        function centerPopup() {
            var d = document.getElementById("divAuthorizeNetPopup");
            d.style.left = "50%";
            d.style.top = "50%";
            d.style.transform = "translate(-50%, -50%)";
            // var left = -Math.floor(d.clientWidth / 2);
            // var top = -Math.floor(d.clientHeight / 2);
            // d.style.marginLeft = left.toString() + "px";
            // d.style.marginTop = top.toString() + "px";
            d.style.zIndex = "2";
            d.style.visibility = "initial";
            // if (d.offsetLeft < 16) {
            //     d.style.left = "16px";
            //     d.style.marginLeft = "0px";
            // }
            // if (d.offsetTop < 16) {
            //     d.style.top = "16px";
            //     d.style.marginTop = "0px";
            // }
        }

        function parseQueryString(str) {
            var vars = [];
            var arr = str.split('&');
            var pair;
            for (var i = 0; i < arr.length; i++) {
                pair = arr[i].split('=');
                vars.push(pair[0]);
                vars[pair[0]] = unescape(pair[1]);
            }
            return vars;
        }
    }());

</script>
